// Melissa - Multi-Layer Soft Shadows
// Copyright (C) 2007, Louis Bavoil
//
// This software is licensed under the BSD open-source license. See
// http://www.opensource.org/licenses/bsd-license.php for more detail.
//
// Redistribution and use in source and binary forms, with or
// without modification, are permitted provided that the following
// conditions are met:
//
// Redistributions of source code must retain the above copyright notice,
// this list of conditions and the following disclaimer.
//
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// Neither the name of the University of Utah nor the names of
// the contributors may be used to endorse or promote products derived
// from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
// THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
// GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
// THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
// OF SUCH DAMAGE.

struct v2f
{
     float4 Position		: POSITION;
     float2 TexCoords           : TEXCOORD0;
};

struct f2p
{
     float4 Color : COLOR;
};

f2p main(v2f IN,
	 uniform sampler2D DepthMap,
	 uniform float2 ViewPortSize
     )
{
     f2p OUT;

     float2 dxdy = 0.25 / ViewPortSize.xy;
     float dx = dxdy.x;
     float dy = dxdy.y;

     float4 d0 = tex2D(DepthMap, IN.TexCoords+float2(-dx, -dy));
     float4 d1 = tex2D(DepthMap, IN.TexCoords+float2(-dx, dy));
     float4 d2 = tex2D(DepthMap, IN.TexCoords+float2(dx, -dy));
     float4 d3 = tex2D(DepthMap, IN.TexCoords+float2(dx, dy));

#if 0
     float minz = 1.e5;
     if (d0.a != 0 && d0.r < minz) minz = d0.r;
     if (d1.a != 0 && d1.r < minz) minz = d1.r;
     if (d2.a != 0 && d2.r < minz) minz = d2.r;
     if (d3.a != 0 && d3.r < minz) minz = d3.r;

     float maxz = 0;
     if (d0.a != 0 && d0.g > maxz) maxz = d0.g;
     if (d1.a != 0 && d1.g > maxz) maxz = d1.g;
     if (d2.a != 0 && d2.g > maxz) maxz = d2.g;
     if (d3.a != 0 && d3.g > maxz) maxz = d3.g;

     OUT.Color = float4(minz, maxz, 0, 1);
#else
     float minz = d0.r;
     if (d1.r < minz) minz = d1.r;
     if (d2.r < minz) minz = d2.r;
     if (d3.r < minz) minz = d3.r;
     OUT.Color = float4(minz,minz,0,1);
#endif
     return OUT;
}
